image: docker:20.10.22 
services:
  - docker:20.10.22-dind
stages:
  - test
  - build
  - build_docker
  - deploy

# Partie à compléter par les développeurs label
# test:
#   stage: test
#   services:
#   - docker:20.10.22
#   script: 
#     - echo $CI_JOB_TOKEN | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
#     - docker build 
#         --build-arg http_proxy=$HTTP_PROXY
#         --build-arg https_proxy=$HTTPS_PROXY
#         #--target test
#         -t label-test
#     # docker run label-back-test /bin/sh -c "yarn install -- ; yarn compile ...." 
#     # -> ici on lance un conteneur un par un, donc les données générées par le yarn install ne sont pas sauvegardées.
#     - docker run label-test yarn install
#     - docker run label-test yarn compile
#     - docker run label-test yarn test
#     - docker run label-test yarn lint
#   only:
#     - master
#     - re7
#     - dev

build_label_backend:
  stage: build
  #TODO: PUT INTO GITLAB
  # TODO: COMPLETE, THAT'S NOT ENOUGH (FOR EXAMPLE THERE ARE NO MONGODB VARS)
  variables:
    LABEL_GIT_BRANCH: "dev"
    LABEL_API_PORT: 55432
    LABEL_APP_HOST: "label.judilibre-prive.local"
    LABEL_APP_GROUP: "judilibre-prive"
    LABEL_APP_ID: "label-backend"
    LABEL_APP_KEYWORD: "html"
    LABEL_APP_SCHEME: "https"
    LABEL_APP_SELF_SIGNED: "true"
    LABEL_APP_PORT: "443"
    LABEL_DOCKER_USERNAME: "opendatajustice"
    LABEL_DOCKER_TARGET: "label-backend"
    LABEL_KUBE_ZONE: "local"
    LABEL_KUBE_TYPE: "k3s"
    LABEL_KUBE_NAMESPACE: "judilibre-prive-local-dev"
    LABEL_ROOT_PATH: "label/api"
    LABEL_NLP_API_HOST: "https://nlp-pseudonymisaton.judilibre-prive.local"
    LABEL_NLP_API_PORT: "443"
    LABEL_START_TIMEOUT: "180"
    LABEL_KUBECONFIG: "$HOME/.kube/config-local-k3s.yaml"
  script: 
    - echo $CI_JOB_TOKEN | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
    - echo "$HTTP_PROXY"
    - echo "$HTTPS_PROXY"
    - export NODE_OPTIONS=--openssl-legacy-provider
    - apk update
    - apk add nodejs yarn git npm
    - yarn config set proxy $HTTP_PROXY
    - yarn config set https-proxy $HTTPS_PROXY
    - yarn install --
    - yarn compile
    - CI=false yarn buildClient # from "ugly workaround" in github workflows
    - docker build
        --build-arg http_proxy=$HTTP_PROXY
        --build-arg https_proxy=$HTTPS_PROXY
        --target label-backend
        -f Dockerfile.label-backend
        -t $CI_REGISTRY/cour-de-cassation/label:$CI_COMMIT_BRANCH-$CI_COMMIT_SHORT_SHA-label-backend .
    - docker push $CI_REGISTRY/cour-de-cassation/label:$CI_COMMIT_BRANCH-$CI_COMMIT_SHORT_SHA-label-backend
  only:
    - master
    - re7
    - dev
  tags:
    - docker

# temporary disable label client because it's broken - force redeploy bc miroring seems broken

build_label_client:
  stage: build
  #TODO: PUT INTO GITLAB
  variables:
    LABEL_GIT_BRANCH: "dev"
    LABEL_API_PORT: 55432
    LABEL_APP_HOST: "label.judilibre-prive.local"
    LABEL_APP_GROUP: "judilibre-prive"
    LABEL_APP_ID: "label-client"
    LABEL_APP_KEYWORD: "html"
    LABEL_APP_SCHEME: "https"
    LABEL_APP_SELF_SIGNED: "true"
    LABEL_APP_PORT: 443
    LABEL_DOCKER_USERNAME: "opendatajustice"
    LABEL_DOCKER_TARGET: "label-client"
    LABEL_KUBE_ZONE: "local"
    LABEL_KUBE_TYPE: "k3s"
    LABEL_KUBE_NAMESPACE: "judilibre-prive-local-dev"
    LABEL_ROOT_PATH: "label"
    LABEL_PUBLIC_URL: "/label"
    LABEL_START_TIMEOUT: "180"
    LABEL_KUBECONFIG: "$HOME/.kube/config-local-k3s.yaml"
  script:
    - echo $CI_JOB_TOKEN | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
    - echo "$HTTP_PROXY"
    - echo "$HTTPS_PROXY"
    - export NODE_OPTIONS=--openssl-legacy-provider
    - apk update
    - apk add nodejs yarn git npm
    - yarn config set proxy $HTTP_PROXY
    - yarn config set https-proxy $HTTPS_PROXY
    - yarn install --
    - yarn compile
    - CI=false yarn buildClient # from "ugly workaround" in github workflows
    # - yarn test
    # - yarn lint
    - docker build
        --build-arg http_proxy=$HTTP_PROXY
        --build-arg https_proxy=$HTTPS_PROXY
        --target label-client
        -f Dockerfile.label-client
        -t $CI_REGISTRY/cour-de-cassation/label:$CI_COMMIT_BRANCH-$CI_COMMIT_SHORT_SHA-label-client .
    - docker push $CI_REGISTRY/cour-de-cassation/label:$CI_COMMIT_BRANCH-$CI_COMMIT_SHORT_SHA-label-client
  only:
    - master
    - re7
    - dev
  tags:
    - docker


# build_label_client:
#   stage: build
#   image: node:14
#   artifacts:
#     paths:
#       - packages/generic/client/build/
#   script:
#     - yarn config set proxy $HTTP_PROXY
#     - yarn config set https-proxy $HTTPS_PROXY
#     - yarn install --
#     - yarn compile
#     - yarn buildClient
#     - ls packages/generic/client/

# build_label_client_docker_image:
#   stage: build_docker
#   script: 
#     - echo $CI_JOB_TOKEN | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
#     - docker build
#         --build-arg http_proxy=$HTTP_PROXY
#         --build-arg https_proxy=$HTTPS_PROXY
#         --target label-client
#         -f Dockerfile.label-client
#         -t $CI_REGISTRY/cour-de-cassation/label:$CI_COMMIT_BRANCH-$CI_COMMIT_SHORT_SHA-label-client .
#     - docker push $CI_REGISTRY/cour-de-cassation/label:$CI_COMMIT_BRANCH-$CI_COMMIT_SHORT_SHA-label-client
#   dependencies:
#     - build_label_client
#   only:
#     - master
#     - re7
#     - dev

deploy_label_backend:
  stage: deploy
  variables:
    MONGODB_NAME: ${{ MONGODB_NAME }}
    MONGODB_URI: ${{ MONGODB_URI }}
    MONGODB_PORT: ${{MONGODB_PORT }}
    MONGODB_URL: $MONGODB_URL
    ROOT_PATH: label/api
    JURITJ_DOC_LOGIN: $JURITJ_DOC_LOGIN
    JURITJ_DOC_PASSWORD: $JURITJ_DOC_PASSWORD
  script:
    - envsubst < .deploys/deploy_namespace.yaml | kubectl --kubeconfig=/home/gitlab-runner/.kube/$CI_COMMIT_BRANCH apply -f -
    - envsubst < .deploys/deploy_backend.yaml | kubectl --kubeconfig=/home/gitlab-runner/.kube/$CI_COMMIT_BRANCH apply -f -
  only:
    - master
    - re7
    - dev
  tags:
    - shell
  dependencies:
    - build_label_backend

# deploy_label_client:
#   stage: deploy
#   script:
#     - envsubst < .deploys/deploy_namespace.yaml | kubectl --kubeconfig=/home/gitlab-runner/.kube/$CI_COMMIT_BRANCH apply -f -
#     - envsubst < .deploys/deploy_client.yaml | kubectl --kubeconfig=/home/gitlab-runner/.kube/$CI_COMMIT_BRANCH apply -f -
#     - envsubst < .deploys/deploy_ingress.yaml | kubectl --kubeconfig=/home/gitlab-runner/.kube/$CI_COMMIT_BRANCH apply -f -
#   only:
#     - master
#     - re7
#     - dev
#   tags:
#     - shell
#   dependencies:
#     - build_label_client


deploy_job_annotation:
  stage: deploy
  variables:
    JOB_NAME: "nlp-annotation"
    JOB_SCHEDULE: "*/5 2-20 * * *"
    SUCCESSFUL_JOBS_HISTORY_LIMIT: 288
    FAILED_JOBS_HISTORY_LIMIT: 134
    BACKOFF_LIMIT: 0
    PARALLELISM: 1
    ACTIVE_DEADLINE_SECONDS: 3600
    COMMAND: "dist/scripts/annotateDocumentsWithoutAnnotationsWithNlp.js"
    MONGODB_URL: ${{ MONGODB_URL }}
  script:
    - envsubst < .deploys/deploy_jobs_template.yaml | kubectl --kubeconfig=/home/gitlab-runner/.kube/$CI_COMMIT_BRANCH apply -f -
  only:
    - master
    - re7
    - dev
  tags:
    - shell
  dependencies:
    - build_label_backend

deploy_job_import_j_7:
  stage: deploy
  variables:
    JOB_NAME: "import-j-7"
    JOB_SCHEDULE: "*/30 6-12 * * *"
    SUCCESSFUL_JOBS_HISTORY_LIMIT: 84
    FAILED_JOBS_HISTORY_LIMIT: 84
    BACKOFF_LIMIT: 0
    PARALLELISM: 1
    ACTIVE_DEADLINE_SECONDS: 300
    COMMAND: "dist/scripts/importAllDocumentsFromSderSince.js --days 7"
    MONGODB_URL: ${{ MONGODB_URL }}
  script:
    - envsubst < .deploys/deploy_jobs_template.yaml | kubectl --kubeconfig=/home/gitlab-runner/.kube/$CI_COMMIT_BRANCH apply -f -
  only:
    - master
    - re7
    - dev
  tags:
    - shell
  dependencies:
    - build_label_backend

deploy_job_filler_import:
  stage: deploy
  variables:
    JOB_NAME: "filler-import"
    JOB_SCHEDULE: "15 6-17 * * *"
    SUCCESSFUL_JOBS_HISTORY_LIMIT: 84
    FAILED_JOBS_HISTORY_LIMIT: 84
    BACKOFF_LIMIT: 0
    PARALLELISM: 1
    ACTIVE_DEADLINE_SECONDS: 1800
    COMMAND: "dist/scripts/autoImportDocumentsFromSder.js --count 500 --threshold 1000"
    MONGODB_URL: ${{ MONGODB_URL }}
  script:
    - envsubst < .deploys/deploy_jobs_template.yaml | kubectl --kubeconfig=/home/gitlab-runner/.kube/$CI_COMMIT_BRANCH apply -f -
  only:
    - master
    - re7
    - dev
  tags:
    - shell
  dependencies:
    - build_label_backend

deploy_job_import_chained:
  stage: deploy
  variables:
    JOB_NAME: "import-chained"
    JOB_SCHEDULE: "0 17 * * *"
    SUCCESSFUL_JOBS_HISTORY_LIMIT: 7
    FAILED_JOBS_HISTORY_LIMIT: 7
    BACKOFF_LIMIT: 2
    PARALLELISM: 1
    ACTIVE_DEADLINE_SECONDS: 300
    COMMAND: "dist/scripts/importChainedDocumentsFromSder.js --count 500 --threshold 1500"
    MONGODB_URL: ${{ MONGODB_URL }}
  script:
    - envsubst < .deploys/deploy_jobs_template.yaml | kubectl --kubeconfig=/home/gitlab-runner/.kube/$CI_COMMIT_BRANCH apply -f -
  only:
    - master
    - re7
    - dev
  tags:
    - shell
  dependencies:
    - build_label_backend

deploy_job_export_j_4:
  stage: deploy
  variables:
    JOB_NAME: "export-j-4"
    JOB_SCHEDULE: "30 17 * * *"
    SUCCESSFUL_JOBS_HISTORY_LIMIT: 7
    FAILED_JOBS_HISTORY_LIMIT: 7
    BACKOFF_LIMIT: 2
    PARALLELISM: 1
    ACTIVE_DEADLINE_SECONDS: 300
    COMMAND: "dist/scripts/exportTreatedDocumentsSince.js"
    MONGODB_URL: ${{ MONGODB_URL }}
  script:
    - envsubst < .deploys/deploy_jobs_template.yaml | kubectl --kubeconfig=/home/gitlab-runner/.kube/$CI_COMMIT_BRANCH apply -f -
  only:
    - master
    - re7
    - dev
  tags:
    - shell
  dependencies:
    - build_label_backend

deploy_job_export_publishable:
  stage: deploy
  variables:
    JOB_NAME: "export-publishable"
    JOB_SCHEDULE: "50 13 * * *"
    SUCCESSFUL_JOBS_HISTORY_LIMIT: 7
    FAILED_JOBS_HISTORY_LIMIT: 7
    BACKOFF_LIMIT: 2
    PARALLELISM: 1
    ACTIVE_DEADLINE_SECONDS: 300
    COMMAND: "dist/scripts/exportTreatedPublishableDocuments.js"
    MONGODB_URL: ${{ MONGODB_URL }}
  script:
    - envsubst < .deploys/deploy_jobs_template.yaml | kubectl --kubeconfig=/home/gitlab-runner/.kube/$CI_COMMIT_BRANCH apply -f -
  only:
    - master
    - re7
    - dev
  tags:
    - shell
  dependencies:
    - build_label_backend

deploy_job_free_pending:
  stage: deploy
  variables:
    JOB_NAME: "free-pending"
    JOB_SCHEDULE: "*/16 4-17 * * *"
    SUCCESSFUL_JOBS_HISTORY_LIMIT: 50
    FAILED_JOBS_HISTORY_LIMIT: 50
    BACKOFF_LIMIT: 0
    PARALLELISM: 1
    ACTIVE_DEADLINE_SECONDS: 300
    COMMAND: "dist/scripts/freePendingDocuments.js"
    MONGODB_URL: ${{ MONGODB_URL }}
  script:
    - envsubst < .deploys/deploy_jobs_template.yaml | kubectl --kubeconfig=/home/gitlab-runner/.kube/$CI_COMMIT_BRANCH apply -f -
  only:
    - master
    - re7
    - dev
  tags:
    - shell
  dependencies:
    - build_label_backend

deploy_job_purge_m_6:
  stage: deploy
  variables:
    JOB_NAME: "purge-m-6"
    JOB_SCHEDULE: "0 19 * * *"
    SUCCESSFUL_JOBS_HISTORY_LIMIT: 7
    FAILED_JOBS_HISTORY_LIMIT: 7
    BACKOFF_LIMIT: 2
    PARALLELISM: 1
    ACTIVE_DEADLINE_SECONDS: 300
    COMMAND: "dist/scripts/purgeDb.js --beforeMonths 6"
    MONGODB_URL: ${{ MONGODB_URL }}
  script:
    - envsubst < .deploys/deploy_jobs_template.yaml | kubectl --kubeconfig=/home/gitlab-runner/.kube/$CI_COMMIT_BRANCH apply -f -
  only:
    - master
    - re7
    - dev
  tags:
    - shell
  dependencies:
    - build_label_backend

deploy_job_renew_cache:
  stage: deploy
  variables:
    JOB_NAME: "renew-cache"
    JOB_SCHEDULE: "*/5 4-17 * * *"
    SUCCESSFUL_JOBS_HISTORY_LIMIT: 168
    FAILED_JOBS_HISTORY_LIMIT: 168
    BACKOFF_LIMIT: 0
    PARALLELISM: 1
    ACTIVE_DEADLINE_SECONDS: 300
    COMMAND: "ist/scripts/renewCache.js --beforeMinutes 5"
    MONGODB_URL: ${{ MONGODB_URL }}
  script:
    - envsubst < .deploys/deploy_jobs_template.yaml | kubectl --kubeconfig=/home/gitlab-runner/.kube/$CI_COMMIT_BRANCH apply -f -
  only:
    - master
    - re7
    - dev
  tags:
    - shell
  dependencies:
    - build_label_backend

deploy_job_cleaning:
  stage: deploy
  variables:
    JOB_NAME: "cleaning"
    JOB_SCHEDULE: "30 19 * * *"
    SUCCESSFUL_JOBS_HISTORY_LIMIT: 7
    FAILED_JOBS_HISTORY_LIMIT: 7
    BACKOFF_LIMIT: 0
    PARALLELISM: 1
    ACTIVE_DEADLINE_SECONDS: 300
    COMMAND: "dist/scripts/cleanDocuments.js"
    MONGODB_URL: ${{ MONGODB_URL }}
  script:
    - envsubst < .deploys/deploy_jobs_template.yaml | kubectl --kubeconfig=/home/gitlab-runner/.kube/$CI_COMMIT_BRANCH apply -f -
  only:
    - master
    - re7
    - dev
  tags:
    - shell
  dependencies:
    - build_label_backend

