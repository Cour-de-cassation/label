image: docker:20.10.22 
services:
  - docker:20.10.22-dind
stages:
  - test
  - build
  - build_docker
  - deploy

# Partie à compléter par les développeurs label
# test:
#   stage: test
#   services:
#   - docker:20.10.22
#   script: 
#     - echo $CI_JOB_TOKEN | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
#     - docker build 
#         --build-arg http_proxy=$HTTP_PROXY
#         --build-arg https_proxy=$HTTPS_PROXY
#         #--target test
#         -t label-test
#     # docker run label-back-test /bin/sh -c "yarn install -- ; yarn compile ...." 
#     # -> ici on lance un conteneur un par un, donc les données générées par le yarn install ne sont pas sauvegardées.
#     - docker run label-test yarn install
#     - docker run label-test yarn compile
#     - docker run label-test yarn test
#     - docker run label-test yarn lint
#   only:
#     - master
#     - re7
#     - dev

build_label_backend:
  stage: build
    variables:
    #TODO: PUT INTO GITLAB
    # TODO: COMPLETE, THAT'S NOT ENOUGH (FOR EXAMPLE THERE ARE NO MONGODB VARS)
    LABEL_GIT_BRANCH: dev
    LABEL_API_PORT: 55432
    LABEL_APP_HOST: label.judilibre-prive.local
    LABEL_APP_GROUP: judilibre-prive
    LABEL_APP_ID: label-backend
    LABEL_APP_KEYWORD: html
    LABEL_APP_SCHEME: https
    LABEL_APP_SELF_SIGNED: true
    LABEL_APP_PORT: 443
    LABEL_DOCKER_USERNAME: opendatajustice
    LABEL_DOCKER_TARGET: label-backend
    LABEL_KUBE_ZONE: local
    LABEL_KUBE_TYPE: k3s
    LABEL_KUBE_NAMESPACE: judilibre-prive-local-dev
    LABEL_ROOT_PATH: label/api
    LABEL_NLP_API_HOST: https://nlp-pseudonymisaton.judilibre-prive.local
    LABEL_NLP_API_PORT: 443
    LABEL_START_TIMEOUT: 180
    LABEL_KUBECONFIG: $HOME/.kube/config-local-k3s.yaml
  script: 
    - echo $CI_JOB_TOKEN | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
    - echo "$HTTP_PROXY"
    - echo "$HTTPS_PROXY"
    - docker build
        --build-arg http_proxy=$HTTP_PROXY
        --build-arg https_proxy=$HTTPS_PROXY
        -f Dockerfile.label-backend
        -t $CI_REGISTRY/cour-de-cassation/label:$CI_COMMIT_BRANCH-$CI_COMMIT_SHORT_SHA-label-backend .
    - docker push $CI_REGISTRY/cour-de-cassation/label:$CI_COMMIT_BRANCH-$CI_COMMIT_SHORT_SHA-label-backend
  only:
    - master
    - re7
    - dev

build_label_client:
  stage: build
  variables:
    #TODO: PUT INTO GITLAB
    LABEL_GIT_BRANCH: dev
    LABEL_API_PORT: 55432
    LABEL_APP_HOST: label.judilibre-prive.local
    LABEL_APP_GROUP: judilibre-prive
    LABEL_APP_ID: label-client
    LABEL_APP_KEYWORD: html
    LABEL_APP_SCHEME: https
    LABEL_APP_SELF_SIGNED: true
    LABEL_APP_PORT: 443
    LABEL_DOCKER_USERNAME: opendatajustice
    LABEL_DOCKER_TARGET: label-client
    LABEL_KUBE_ZONE: local
    LABEL_KUBE_TYPE: k3s
    LABEL_KUBE_NAMESPACE: judilibre-prive-local-dev
    LABEL_ROOT_PATH: label
    LABEL_PUBLIC_URL: /label
    LABEL_START_TIMEOUT: 180
    LABEL_KUBECONFIG: $HOME/.kube/config-local-k3s.yaml
  script:
    - apk update
    - apk add nodejs yarn git
    - yarn config set proxy $HTTP_PROXY
    - yarn config set https-proxy $HTTPS_PROXY
    - yarn install --
    - yarn compile
    - yarn buildClient # from "ugly workaround" in github workflows
    # - yarn test
    # - yarn lint
    - echo $CI_JOB_TOKEN | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
    - echo "$HTTP_PROXY"
    - echo "$HTTPS_PROXY"
    - docker build
        --build-arg http_proxy=$HTTP_PROXY
        --build-arg https_proxy=$HTTPS_PROXY
        --target label-client
        -f Dockerfile.label-client
        -t $CI_REGISTRY/cour-de-cassation/label:$CI_COMMIT_BRANCH-$CI_COMMIT_SHORT_SHA-label-client .
    - docker push $CI_REGISTRY/cour-de-cassation/label:$CI_COMMIT_BRANCH-$CI_COMMIT_SHORT_SHA-label-client
  only:
    - master
    - re7
    - dev
  tags:
    - docker


# build_label_client:
#   stage: build
#   image: node:14
#   artifacts:
#     paths:
#       - packages/generic/client/build/
#   script:
#     - yarn config set proxy $HTTP_PROXY
#     - yarn config set https-proxy $HTTPS_PROXY
#     - yarn install --
#     - yarn compile
#     - yarn buildClient
#     - ls packages/generic/client/

# build_label_client_docker_image:
#   stage: build_docker
#   script: 
#     - echo $CI_JOB_TOKEN | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
#     - docker build
#         --build-arg http_proxy=$HTTP_PROXY
#         --build-arg https_proxy=$HTTPS_PROXY
#         --target label-client
#         -f Dockerfile.label-client
#         -t $CI_REGISTRY/cour-de-cassation/label:$CI_COMMIT_BRANCH-$CI_COMMIT_SHORT_SHA-label-client .
#     - docker push $CI_REGISTRY/cour-de-cassation/label:$CI_COMMIT_BRANCH-$CI_COMMIT_SHORT_SHA-label-client
#   dependencies:
#     - build_label_client
#   only:
#     - master
#     - re7
#     - dev

deploy_label_backend:
  stage: deploy
  variables:
    MONGODB_NAME: ${{ secrets.MONGODB_NAME }}
    MONGODB_URI: ${{ secrets.MONGODB_URI }}
    MONGODB_PORT: ${{ secrets.MONGODB_PORT }}
    ROOT_PATH: label/api
    JURITJ_DOC_LOGIN: $JURITJ_DOC_LOGIN
    JURITJ_DOC_PASSWORD: $JURITJ_DOC_PASSWORD
  script:
    - envsubst < .deploys/deploy_namespace.yaml | kubectl --kubeconfig=/home/gitlab-runner/.kube/$CI_COMMIT_BRANCH apply -f -
    - envsubst < .deploys/deploy_backend.yaml | kubectl --kubeconfig=/home/gitlab-runner/.kube/$CI_COMMIT_BRANCH apply -f -
  only:
    - master
    - re7
    - dev
  tags:
    - shell
  dependencies:
    - build_label_backend

deploy_label_client:
  stage: deploy
  script:
    - envsubst < .deploys/deploy_namespace.yaml | kubectl --kubeconfig=/home/gitlab-runner/.kube/$CI_COMMIT_BRANCH apply -f -
    - envsubst < .deploys/deploy_client.yaml | kubectl --kubeconfig=/home/gitlab-runner/.kube/$CI_COMMIT_BRANCH apply -f -
    - envsubst < .deploys/deploy_ingress.yaml | kubectl --kubeconfig=/home/gitlab-runner/.kube/$CI_COMMIT_BRANCH apply -f -
  only:
    - master
    - re7
    - dev
  tags:
    - shell
  dependencies:
    - build_label_client
