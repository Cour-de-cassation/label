FROM node:16-alpine as label-backend
ARG http_proxy
ARG https_proxy
ENV API_PORT=55430

# Use proxy
RUN yarn config set proxy $http_proxy; \
  yarn config set https-proxy $https_proxy;

WORKDIR /home/node/

# Install git for sder and sder-core package
RUN apk add git

# Copy context files
COPY ./package.json ./
COPY packages/generic/core/package.json ./packages/generic/core/
COPY packages/generic/backend/package.json ./packages/generic/backend/
COPY packages/courDeCassation/package.json ./packages/courDeCassation/
COPY packages/generic/sso/package.json ./packages/generic/sso/
COPY ./sso_files ./sso_files/

COPY . .

# Exclure les dépendances inutiles pour le backend prod
RUN cat package.json | sed 's|"packages/generic/\*"|"packages/generic/backend", "packages/generic/core", "packages/generic/sso"|' > package.json.new && \
  mv package.json.new package.json

# Install dependencies
RUN yarn install  --production
# RUN yarn install --pure-lockfile

# Compilation explicite des packages nécessaires
RUN cd packages/generic/sso && yarn compile
RUN cd packages/generic/core && yarn compile
RUN cd packages/generic/backend && yarn compile
RUN cd packages/courDeCassation && yarn compile

# ADD packages/generic/core packages/generic/core
# ADD packages/generic/backend packages/generic/backend
# ADD packages/courDeCassation packages/courDeCassation
# ADD packages/generic/sso packages/generic/sso

# RUN yarn build

# Vérification que le fichier compilé existe
RUN ls -la packages/courDeCassation/dist/ || (echo "Erreur: dist/ est manquant" && exit 1)

RUN chown node .

USER node

# Expose the listening port of your app
EXPOSE ${API_PORT}

# Lancement avec vérification
CMD ["sh", "-c", "RUN_MODE=PROD node packages/courDeCassation/dist/labelServer.js -s packages/courDeCassation/settings/settings.json"]
