---
- name: Creation Deployment
  k8s:
    apply: true
    state: present
    verify_ssl: true
    definition:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: "{{ label_back_app_id }}-deployment"
        namespace: "{{ label_kube_namespace }}"
        labels:
          app: "{{ label_back_app_id }}"
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: "{{ label_back_app_id }}"
        template:
          metadata:
            labels:
              app: "{{ label_back_app_id }}"
          spec:
            initContainers:
              - name: "{{ rclone_app_id }}"
                image: rclone/rclone:latest
                command:
                  - /bin/sh
                args:
                  - -c
                  - |
                    rclone -v sync s3:{{ sso_bucket }} /sso_files
                envFrom:
                  - secretRef:
                      name: "{{ rclone_app_id }}-secret"
                volumeMounts:
                  - name: "{{ rclone_app_id }}-pvc-sso"
                    mountPath: /sso_files
            containers:
              - name: "{{ label_back_app_id }}"
                image: "{{ label_backend_image }}"
                ports:
                  - containerPort: 55430
                envFrom:
                  - configMapRef:
                      name: "{{ label_back_app_id }}-config"
                  - secretRef:
                      name: "{{ label_back_app_id }}-secret"
                volumeMounts:
                  - name: "{{ rclone_app_id }}-pvc-sso"
                    mountPath: /sso_files
            volumes:
              - name: "{{ rclone_app_id }}-pvc-sso"
                persistentVolumeClaim:
                  claimName: "{{ rclone_app_id }}-pvc-sso"

                  # startupProbe:
                  #   exec:
                  #     command:
                  #     - /bin/sh
                  #     - -c
                  #     - curl -s --fail --max-time 2 "http://localhost:55430/${ROOT_PATH}/health" | egrep -q 'true'
                  #   initialDelaySeconds: 15
                  #   periodSeconds: 5
                  #   failureThreshold: 20
                  # livenessProbe:
                  #   exec:
                  #     command:
                  #     - /bin/sh
                  #     - -c
                  #     - curl -s --fail --retry-delay 0 --max-time 2 --retry 30 --retry-max-time 60 "http://localhost:55430/${ROOT_PATH}/health" | egrep -q 'true'
                  #   initialDelaySeconds: 15
                  #   periodSeconds: 15
                  #   failureThreshold: 10
                  #   timeoutSeconds: 60
                  # securityContext:
                  #   runAsUser: 1000
                  #   capabilities:
                  #     drop:
                  #       - all
                  #   allowPrivilegeEscalation: false
                  #   readOnlyRootFilesystem: true
            #     volumeMounts:
            #       - name: label-backend-config
            #         mountPath: /home/node/packages/courDeCassation/environments
            #         readOnly: true
            # volumes:
            # - name: label-backend-config
            #   secret:
            #     secretName: label-backend-config
