apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${APP_ID}-deployment
  namespace: ${KUBE_NAMESPACE}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ${APP_ID}
  template:
    metadata:
      labels:
        app: ${APP_ID}
    spec:
      initContainers:
      - name: run-new-migrations
        image: ${DOCKER_USERNAME}/${APP_ID}:${VERSION}
        command:
        - /bin/sh
        args:
        - -c
        - ./scripts/runProdScript.sh dist/scripts/runNewMigrations.js
        securityContext:
          runAsUser: 1000
          capabilities:
            drop:
              - all
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - name: ${APP_ID}-config
          mountPath: /home/node/packages/courDeCassation/environments
          readOnly: true
      containers:
      - name: ${APP_ID}
        image: ${DOCKER_USERNAME}/${APP_ID}:${VERSION}
        ports:
        - containerPort: ${API_PORT}
        readinessProbe:
          #exec:
          #  command:
          #  - /bin/sh
          #  - -c
          #  - curl -s --fail --retry-delay 0 --max-time 2 --retry 30 --retry-max-time 60 "http://localhost:${API_PORT}/${ROOT_PATH}/health" | egrep -q '${APP_KEYWORD}'
          tcpSocket:
            port: ${API_PORT}
          initialDelaySeconds: 15
          periodSeconds: 15
          timeoutSeconds: 60
        livenessProbe:
          #exec:
          #  command:
          #  - /bin/sh
          #  - -c
          #  - curl -s --fail --retry-delay 0 --max-time 2 --retry 30 --retry-max-time 60 "http://localhost:${API_PORT}/${ROOT_PATH}/health" | egrep -q '${APP_KEYWORD}'
          tcpSocket:
            port: ${API_PORT}
          initialDelaySeconds: 15
          periodSeconds: 15
          failureThreshold: 10
          timeoutSeconds: 60
        securityContext:
          runAsUser: 1000
          capabilities:
            drop:
              - all
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - name: ${APP_ID}-config
          mountPath: /home/node/packages/courDeCassation/environments
          readOnly: true
      volumes:
      - name: ${APP_ID}-config
        secret:
          secretName: ${APP_ID}-config
---
apiVersion: v1
kind: Secret
metadata:
  name: ${APP_ID}-config
  namespace: ${KUBE_NAMESPACE}
stringData:
  prodEnvironment.json: |-
    {
      "dbName": "${MONGODB_NAME}",
      "pathName": {
        "nlpApi": "${NLP_API_HOST}",
        "server": "${APP_HOST}",
        "db": "${MONGODB_URI}"
      },
      "port": {
        "nlpApi": ${NLP_API_PORT},
        "server": ${API_PORT},
        "db": ${MONGODB_PORT}
      }
    }
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: ${APP_ID}-job-nlp-annotation
  namespace: ${KUBE_NAMESPACE}
spec:
  schedule: "*/5 7-20 * * *"
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      backoffLimit: 0
      activeDeadlineSeconds: 3600
      template:
        spec:
          containers:
          - name: ${APP_ID}-job-nlp-annotation
            image: ${DOCKER_USERNAME}/${APP_ID}:${VERSION}
            volumeMounts:
            - name: ${APP_ID}-config
              mountPath: /home/node/packages/courDeCassation/environments
              readOnly: true
            command:
            - /bin/sh
            args:
            - -c
            - node dist/scripts/annotateDocumentsWithoutAnnotationsWithNlp.js --environment environments/prodEnvironment.json --settings settings/settings.json
            env:
            - name: RUN_MODE
              value: PROD
            - name: NODE_TLS_REJECT_UNAUTHORIZED
              value: "0"
          restartPolicy: Never
          volumes:
          - name: ${APP_ID}-config
            secret:
              secretName: ${APP_ID}-config
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: ${APP_ID}-job-import-j-7
  namespace: ${KUBE_NAMESPACE}
spec:
  schedule: "*/30 7-13 * * *"
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      backoffLimit: 0
      activeDeadlineSeconds: 300
      template:
        spec:
          containers:
          - name: ${APP_ID}-job-import-j-7
            image: ${DOCKER_USERNAME}/${APP_ID}:${VERSION}
            volumeMounts:
            - name: ${APP_ID}-config
              mountPath: /home/node/packages/courDeCassation/environments
              readOnly: true
            command:
            - /bin/sh
            args:
            - -c
            - node dist/scripts/importAllDocumentsFromSderSince.js --days 7 --environment environments/prodEnvironment.json --settings settings/settings.json
            env:
            - name: RUN_MODE
              value: PROD
          restartPolicy: Never
          volumes:
          - name: ${APP_ID}-config
            secret:
              secretName: ${APP_ID}-config
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: ${APP_ID}-job-import-1000
  namespace: ${KUBE_NAMESPACE}
spec:
  schedule: "0 20 * * *"
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      backoffLimit: 0
      activeDeadlineSeconds: 300
      template:
        spec:
          containers:
          - name: ${APP_ID}-job-import-1000
            image: ${DOCKER_USERNAME}/${APP_ID}:${VERSION}
            volumeMounts:
            - name: ${APP_ID}-config
              mountPath: /home/node/packages/courDeCassation/environments
              readOnly: true
            command:
            - /bin/sh
            args:
            - -c
            - node dist/scripts/autoImportDocumentsFromSder.js --count 1000 --threshold 1000 --environment environments/prodEnvironment.json --settings settings/settings.json
            env:
            - name: RUN_MODE
              value: PROD
          restartPolicy: Never
          volumes:
          - name: ${APP_ID}-config
            secret:
              secretName: ${APP_ID}-config
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: ${APP_ID}-job-export-j-4
  namespace: ${KUBE_NAMESPACE}
spec:
  schedule: "30 20 * * *"
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      backoffLimit: 0
      activeDeadlineSeconds: 300
      template:
        spec:
          containers:
          - name: ${APP_ID}-job-export-j-4
            image: ${DOCKER_USERNAME}/${APP_ID}:${VERSION}
            volumeMounts:
            - name: ${APP_ID}-config
              mountPath: /home/node/packages/courDeCassation/environments
              readOnly: true
            command:
            - /bin/sh
            args:
            - -c
            - node dist/scripts/exportTreatedDocumentsSince.js --days 4 --environment environments/prodEnvironment.json --settings settings/settings.json
            env:
            - name: RUN_MODE
              value: PROD
          restartPolicy: Never
          volumes:
          - name: ${APP_ID}-config
            secret:
              secretName: ${APP_ID}-config
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: ${APP_ID}-job-export-publishable
  namespace: ${KUBE_NAMESPACE}
spec:
  schedule: "58 14 * * *"
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      backoffLimit: 0
      activeDeadlineSeconds: 300
      template:
        spec:
          containers:
          - name: ${APP_ID}-job-export-publishable
            image: ${DOCKER_USERNAME}/${APP_ID}:${VERSION}
            volumeMounts:
            - name: ${APP_ID}-config
              mountPath: /home/node/packages/courDeCassation/environments
              readOnly: true
            command:
            - /bin/sh
            args:
            - -c
            - node dist/scripts/exportTreatedPublishableDocuments.js --environment environments/prodEnvironment.json --settings settings/settings.json
            env:
            - name: RUN_MODE
              value: PROD
          restartPolicy: Never
          volumes:
          - name: ${APP_ID}-config
            secret:
              secretName: ${APP_ID}-config
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: ${APP_ID}-job-free-pending
  namespace: ${KUBE_NAMESPACE}
spec:
  schedule: "*/17 7-20 * * *"
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      backoffLimit: 0
      activeDeadlineSeconds: 300
      template:
        spec:
          containers:
          - name: ${APP_ID}-job-free-pending
            image: ${DOCKER_USERNAME}/${APP_ID}:${VERSION}
            volumeMounts:
            - name: ${APP_ID}-config
              mountPath: /home/node/packages/courDeCassation/environments
              readOnly: true
            command:
            - /bin/sh
            args:
            - -c
            - node dist/scripts/freePendingDocuments.js --sinceMinutes 18 --environment environments/prodEnvironment.json --settings settings/settings.json
            env:
            - name: RUN_MODE
              value: PROD
          restartPolicy: Never
          volumes:
          - name: ${APP_ID}-config
            secret:
              secretName: ${APP_ID}-config
